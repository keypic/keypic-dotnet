<?php 

function kypic_help($path, $arg) {
  switch ($path) {
    case 'admin/help#keypic':
      return '<p>' . t('Makes form fields with captcha') . '</p>';
  }
}
/**
 * Implements hook_permission().
 */
function keypic_permission() {
  return array(
    'administer keypic' => array(
      'title' => t('Administer Keypic Forms'),
      'description' => t('Configure forms to display keypic captcha.'),
    ),
  );
}
/**
 * Implements hook_menu().
 */
function keypic_menu() {
  $items['admin/config/user-interface/keypic'] = array(
    'title' => 'Keypic',
    'description' => 'Configure Keypic settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('keypic_admin_form'),
    'access arguments' => array('administer keypic Forms'),
    'file' => 'keypic.admin.inc',
  );
  return $items;
}




/**
 * Implements hook_form_alter().
 */
function keypic_form_alter(&$form, $form_state, $form_id) {
 require_once ( dirname(__FILE__) . '/Keypic.php'); 
 //Keypic::setFormID('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
 //drupal_set_message($form_id.'hiiiiiiiii');
   $bid = Keypic::getToken($Token, $email, $username, $message);
	//$form['keypic'] = array('#type' => 'hidden', '#value' => $bid);
	//$form['keypic'] = array('#type' => 'hidden', '#value' => 'sastri');
	$image = Keypic::getImage();
   $form['keypic_img'] = array(
    '#type' => 'item',
    '#title' =>'',
    '#description' => Keypic::getImage(),
  );
 
 Keypic::setUserAgent("User-Agent: Drupal/7.X | Keypic/" . constant('KEYPIC_VERSION'));
 $form['Token'] = array('#type' => 'hidden', '#value' => $bid);
 array_unshift($form['#validate'], 'keypic_check_validate');
	//echo Keypic::getImage();
}


function keypic_check_validate ($form, $form_state)  {
  
  $formid= str_replace("_", "-", $form_state['values']['form_id']);
  dsm($formid);
     //dsm($form);
	 $Token = $form_state['values']['Token'];
	 $comma_separated = implode(",", $form_state['values']);
	 if($Token != '') {
	 $tokencomma = $Token.',';
	 
	 }
	 $comma_separated = $tokencomma . $comma_separated ; 
	 // drupal_set_message($Token);
	// drupal_set_message($comma_separated);
	 $spam = Keypic::isSpam($comma_separated);
     $new_email = $form_state['values']['mail'];
   
   if(is_numeric($spam))
		{
			//echo '<font color="red"> This message has ' . $spam . '% of spam probability</font><br />';
			//echo Keypic::getImage() . '<br />';
			//echo '<a href="">reload</a>';
			 form_set_error('mail', t("This message has  $spam% of spam probability"));
			die();
		}
		else
		{
			//echo '<font color="red"> There was an error: '. $spam .'</font><br />';
			//die();
		}
 //  form_set_error('mail', t('Your email could not be changed'));
  
}